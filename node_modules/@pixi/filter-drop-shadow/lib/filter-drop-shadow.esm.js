/*!
 * @pixi/filter-drop-shadow - v2.7.0
 * Compiled Sun, 13 Jan 2019 22:51:52 UTC
 *
 * @pixi/filter-drop-shadow is licensed under the MIT License.
 * http://www.opensource.org/licenses/mit-license
 */
import{KawaseBlurFilter as t}from"@pixi/filter-kawase-blur";import{DEG_TO_RAD as i,utils as r,Filter as e,settings as n,Matrix as o}from"pixi.js";var a="attribute vec2 aVertexPosition;\nattribute vec2 aTextureCoord;\n\nuniform mat3 projectionMatrix;\n\nvarying vec2 vTextureCoord;\n\nvoid main(void)\n{\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\n    vTextureCoord = aTextureCoord;\n}",l="varying vec2 vTextureCoord;\nuniform sampler2D uSampler;\nuniform float alpha;\nuniform vec3 color;\nvoid main(void){\n    vec4 sample = texture2D(uSampler, vTextureCoord);\n\n    // Un-premultiply alpha before applying the color\n    if (sample.a > 0.0) {\n        sample.rgb /= sample.a;\n    }\n\n    // Premultiply alpha again\n    sample.rgb = color.rgb * sample.a;\n\n    // alpha user alpha\n    sample *= alpha;\n\n    gl_FragColor = sample;\n}",s=function(s){function u(i){i&&i.constructor!==Object&&(console.warn("DropShadowFilter now uses options instead of (rotation, distance, blur, color, alpha)"),i={rotation:i},void 0!==arguments[1]&&(i.distance=arguments[1]),void 0!==arguments[2]&&(i.blur=arguments[2]),void 0!==arguments[3]&&(i.color=arguments[3]),void 0!==arguments[4]&&(i.alpha=arguments[4])),i=Object.assign({rotation:45,distance:5,color:0,alpha:.5,shadowOnly:!1,kernels:null,blur:2,quality:3,pixelSize:1,resolution:n.RESOLUTION},i),s.call(this);var r=i.kernels,u=i.blur,c=i.quality,p=i.pixelSize,h=i.resolution;this._tintFilter=new e(a,l),this._tintFilter.uniforms.color=new Float32Array(4),this._tintFilter.resolution=h,this._blurFilter=r?new t(r):new t(u,c),this.pixelSize=p,this.resolution=h,this.targetTransform=new o;var f=i.shadowOnly,d=i.rotation,g=i.distance,b=i.alpha,_=i.color;this.shadowOnly=f,this.rotation=d,this.distance=g,this.alpha=b,this.color=_,this._updatePadding()}s&&(u.__proto__=s),u.prototype=Object.create(s&&s.prototype),u.prototype.constructor=u;var c={resolution:{configurable:!0},distance:{configurable:!0},rotation:{configurable:!0},alpha:{configurable:!0},color:{configurable:!0},kernels:{configurable:!0},blur:{configurable:!0},quality:{configurable:!0},pixelSize:{configurable:!0}};return u.prototype.apply=function(t,i,r,e){var n=t.getRenderTarget();n.transform=this.targetTransform,this._tintFilter.apply(t,i,n,!0),n.transform=null,this._blurFilter.apply(t,n,r,e),!0!==this.shadowOnly&&t.applyFilter(this,i,r,!1),t.returnRenderTarget(n)},u.prototype._updatePadding=function(){this.padding=this.distance+2*this.blur},u.prototype._updateTargetTransform=function(){this.targetTransform.tx=this.distance*Math.cos(this.angle),this.targetTransform.ty=this.distance*Math.sin(this.angle)},c.resolution.get=function(){return this._resolution},c.resolution.set=function(t){this._resolution=t,this._tintFilter&&(this._tintFilter.resolution=t),this._blurFilter&&(this._blurFilter.resolution=t)},c.distance.get=function(){return this._distance},c.distance.set=function(t){this._distance=t,this._updatePadding(),this._updateTargetTransform()},c.rotation.get=function(){return this.angle/i},c.rotation.set=function(t){this.angle=t*i,this._updateTargetTransform()},c.alpha.get=function(){return this._tintFilter.uniforms.alpha},c.alpha.set=function(t){this._tintFilter.uniforms.alpha=t},c.color.get=function(){return r.rgb2hex(this._tintFilter.uniforms.color)},c.color.set=function(t){r.hex2rgb(t,this._tintFilter.uniforms.color)},c.kernels.get=function(){return this._blurFilter.kernels},c.kernels.set=function(t){this._blurFilter.kernels=t},c.blur.get=function(){return this._blurFilter.blur},c.blur.set=function(t){this._blurFilter.blur=t,this._updatePadding()},c.quality.get=function(){return this._blurFilter.quality},c.quality.set=function(t){this._blurFilter.quality=t},c.pixelSize.get=function(){return this._blurFilter.pixelSize},c.pixelSize.set=function(t){this._blurFilter.pixelSize=t},Object.defineProperties(u.prototype,c),u}(e);export{s as DropShadowFilter};
//# sourceMappingURL=filter-drop-shadow.esm.js.map
